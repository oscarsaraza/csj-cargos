generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  username          String       @unique
  password          String
  passwordExpiresAt DateTime
  sessions          Session[]
  enlacesCsj        EnlaceCsj[]
  enlacesDeaj       EnlaceDeaj[]
}

model Session {
  id        String   @id @default(cuid()) @map("_id")
  expiresAt DateTime
  userId    String   @db.ObjectId
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  username  String
}

model DatosUdae {
  id                              String      @id @default(auto()) @map("_id") @db.ObjectId
  actoAdministrativoModificatorio String?
  anioActoAdministrativo          Int?
  circuitoJudicial                String
  codigoInterno                   Int?
  consejoSeccional                String
  denominacionInicial             String?
  dependencia                     String
  descripcionCargo                String
  direccionSeccional              String
  distritoJudicial                String
  especialidad                    String
  gradoCargo                      String
  gradoInicial                    String?
  municipioSedeFisica             String
  nombreDespacho                  String
  numero                          Int
  numeroActoAdministrativo        String?
  observaciones                   String?
  subespecialidad                 String
  tipoActoAdministrativo          String?
  enlaceCsj                       EnlaceCsj?
  enlaceDeaj                      EnlaceDeaj?
}

model EnlaceCsj {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime  @default(now())
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  datosUdaeId String    @unique @db.ObjectId
  datosUdae   DatosUdae @relation(fields: [datosUdaeId], references: [id])
  datosCsjId  String    @unique @db.ObjectId
  datosCsj    DatosCsj  @relation(fields: [datosCsjId], references: [id])
}

model DatosCsj {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  cargo          String
  circuito       String
  codigoDespacho String
  despacho       String
  documento      String?
  estadoActual   String
  genero         String?
  municipio      String
  nivel          String?
  numero         Int
  propiedad      String?
  enlace         EnlaceCsj?
}

model EnlaceDeaj {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime   @default(now())
  datosUdaeId String     @unique @db.ObjectId
  datosUdae   DatosUdae  @relation(fields: [datosUdaeId], references: [id])
  datosDeajId String?    @unique @db.ObjectId
  datosDeaj   DatosDeaj? @relation(fields: [datosDeajId], references: [id])
  userId      String     @db.ObjectId
  user        User       @relation(fields: [userId], references: [id])

  @@unique([datosUdaeId, datosDeajId])
}

model DatosDeaj {
  id     String      @id @default(auto()) @map("_id") @db.ObjectId
  enlace EnlaceDeaj?
}
