generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  username          String    @unique
  password          String
  passwordExpiresAt DateTime
  sessions          Session[]
}

model Session {
  id        String   @id @default(cuid()) @map("_id")
  expiresAt DateTime
  userId    String   @db.ObjectId
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  username  String
}

model DatosUdae {
  id                              String    @id @default(auto()) @map("_id") @db.ObjectId
  actoAdministrativoModificatorio String?
  anioActoAdministrativo          Int?
  circuitoJudicial                String
  codigoInterno                   Int?
  consejoSeccional                String
  denominacionInicial             String?
  dependencia                     String
  descripcionCargo                String
  direccionSeccional              String
  distritoJudicial                String
  especialidad                    String
  gradoCargo                      String
  gradoInicial                    String?
  municipioSedeFisica             String
  nombreDespacho                  String
  numero                          Int
  numeroActoAdministrativo        String?
  observaciones                   String?
  subespecialidad                 String
  tipoActoAdministrativo          String?
  datosCsjId                      String?   @db.ObjectId
  datosCsj                        DatosCsj? @relation(fields: [datosCsjId], references: [id])
}

model DatosCsj {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  cargo          String
  circuito       String
  codigoDespacho String
  despacho       String
  documento      String?
  estadoActual   String
  genero         String?
  municipio      String
  nivel          String?
  numero         Int
  propiedad      String?
  datosUdae      DatosUdae[]
}
